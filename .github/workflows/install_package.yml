name: Export Flox Environment and Upload to Azure

on:
  workflow_dispatch:
    inputs:
      library_name:
        description: 'Library name to install'
        required: true
      version:
        description: 'Library version (optional)'
        required: false
      azure_storage_name:
        description: 'Azure Storage Account Name'
        required: true
      azure_storage_file_share:
        description: 'Azure Storage File Share Name'
        required: true
      storage_key:
        description: 'Azure Storage Account Key'
        required: false
        type: secret

jobs:
  export-and-upload:
    runs-on: ubuntu-latest
    env:
      AZURE_STORAGE_KEY: ${{ secrets.storage_key }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Pull Azure Linux Mariner image
        run: |
          docker pull mcr.microsoft.com/cbl-mariner/base/core:2.0

      - name: Run Flox export in container
        run: |
          LIBRARY="${{ github.event.inputs.library_name }}"
          VERSION="${{ github.event.inputs.version }}"
          STORAGE_ACCOUNT="${{ github.event.inputs.azure_storage_name }}"
          STORAGE_FILE_SHARE="${{ github.event.inputs.azure_storage_file_share }}
          STORAGE_KEY="${{ secrets.storage_key }}"
          ENV_NAME="ci-flox-env"

          if [ -z "$VERSION" ]; then
            INSTALL_CMD="flox install $ENV_NAME $LIBRARY"
          else
            INSTALL_CMD="flox install $ENV_NAME $LIBRARY@$VERSION"
          fi

          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -e AZURE_STORAGE_KEY="$STORAGE_KEY" \
            --privileged \
            mcr.microsoft.com/cbl-mariner/base/core:2.0 \
            bash -c "
              set -e
              cd /workspace
              chmod +x chroot-flox-install.sh
              sudo ./chroot-flox-install.sh
              # Add flox and nix to PATH if needed
              #export PATH=/home/nixuser/.nix-profile/bin:\$PATH
              # Create flox environment and install library
              #mkdir $ENV_NAME && cd $ENV_NAME
              #flox init
              #$INSTALL_CMD
              # Export environment
              #./export_env.sh $ENV_NAME
              # Upload to Azure Storage
              #./upload_to_azure_storage.sh ./export $STORAGE_ACCOUNT $STORAGE_KEY $STORAGE_FILE_SHARE
            "